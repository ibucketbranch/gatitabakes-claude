# Deploying Your Bread Ordering App to Netlify

**Title:** Gatita Bakes  
**Author/Developer:** Bucketbranch  
**Version:** 1.0.0  
**Date:** May 7, 2025

This guide will walk you through the process of setting up a GitHub repository and deploying your React bread ordering application to Netlify.

## Step 1: Set Up GitHub Repository

1. **Create a GitHub account** (if you don't already have one) at [github.com](https://github.com/)

2. **Create a new repository**:
   - Click the "+" icon in the top right corner and select "New repository"
   - Name your repository (e.g., "bread-ordering-app")
   - Choose "Public" visibility
   - Click "Create repository"

3. **Push your React app to GitHub**:
   - Open a terminal in your project directory
   - Run the following commands (replace the URL with your repository URL):

```bash
# Initialize git in your project folder
git init

# Add all files to staging
git add .

# Commit the changes
git commit -m "Initial commit"

# Add your GitHub repository as a remote
git remote add origin https://github.com/YOUR_USERNAME/bread-ordering-app.git

# Push to GitHub
git push -u origin main
```

## Step 2: Sign Up for Netlify

1. Go to [netlify.com](https://www.netlify.com/) and sign up for a free account
   - You can sign up using your GitHub account for easier integration

## Step 3: Deploy to Netlify

1. **From the Netlify dashboard**:
   - Click "New site from Git"
   - Select "GitHub" as your Git provider
   - Authorize Netlify to access your GitHub account
   - Select your bread ordering app repository

2. **Configure build settings**:
   - Build command: `npm run build`
   - Publish directory: `build`
   - Click "Deploy site"

3. **Wait for deployment** - Netlify will build and deploy your site (this usually takes 1-2 minutes)

## Step 4: Configure Custom Domain (Optional)

1. **From your site's dashboard**:
   - Click "Domain settings"
   - Click "Add custom domain"
   - Enter your domain name and follow the instructions

2. **Update DNS settings** with your domain registrar to point to Netlify

## Step 5: Set Environment Variables for EmailJS

For security reasons, you should never commit your API keys and sensitive information to your GitHub repository. Instead, use Netlify's environment variables:

1. **In your Netlify dashboard**:
   - Go to your site settings
   - Click on "Build & deploy" â†’ "Environment"
   - Click "Edit variables"
   - Add the following variables:
     - `REACT_APP_EMAILJS_USER_ID`: Your EmailJS User ID
     - `REACT_APP_EMAILJS_SERVICE_ID`: Your EmailJS Service ID
     - `REACT_APP_EMAILJS_CUSTOMER_TEMPLATE_ID`: Your customer email template ID
     - `REACT_APP_EMAILJS_ADMIN_TEMPLATE_ID`: Your admin email template ID

2. **Update your React code** to use these environment variables:

```javascript
// In BreadOrderForm.js
const serviceId = process.env.REACT_APP_EMAILJS_SERVICE_ID;
const customerTemplateId = process.env.REACT_APP_EMAILJS_CUSTOMER_TEMPLATE_ID;
const adminTemplateId = process.env.REACT_APP_EMAILJS_ADMIN_TEMPLATE_ID;
const userId = process.env.REACT_APP_EMAILJS_USER_ID;
```

3. **Trigger a new deployment** by pushing a new commit to GitHub

## Step 6: Test Your Deployed Application

1. Visit your Netlify URL (it will look like `https://your-site-name.netlify.app`)
2. Test the ordering process:
   - Add items to your cart
   - Enter contact information
   - Select delivery or pickup
   - Submit the order
   - Verify that confirmation emails are sent correctly

## Troubleshooting

If you encounter any issues with your deployment, check these common solutions:

- **Build failures**: Make sure your code builds successfully locally with `npm run build`
- **Navigation issues**: Add a `_redirects` file to your `public` folder with the content `/* /index.html 200`
- **Email not sending**: Verify your EmailJS configuration and check the browser console for errors

## Making Updates

To update your deployed site:

1. Make changes to your code locally
2. Commit and push to GitHub:
```bash
git add .
git commit -m "Description of changes"
git push
```
3. Netlify will automatically detect the changes and redeploy your site

---

Congratulations! Your bread ordering application is now live and ready to accept orders.
